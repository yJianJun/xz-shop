<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdzg.xzshop.mapper.GoodsPayHistoryMapper">
  <resultMap id="BaseResultMap" type="com.cdzg.xzshop.domain.GoodsPayHistory">
    <!--@mbg.generated-->
    <!--@Table goods_pay_history-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="spu_no" jdbcType="BIGINT" property="spuNo" />
    <result column="payment_method" jdbcType="INTEGER" property="paymentMethod" />
    <result column="spu_amount" jdbcType="DECIMAL" property="spuAmount" />
    <result column="number" jdbcType="BIGINT" property="number" />
    <result column="the_total_amount_of_orders" jdbcType="DECIMAL" property="theTotalAmountOfOrders" />
    <result column="pay_json" jdbcType="LONGVARCHAR" property="payJson" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, spu_no, payment_method, spu_amount, `number`, the_total_amount_of_orders, pay_json, 
    gmt_create, gmt_update, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from goods_pay_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from goods_pay_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cdzg.xzshop.domain.GoodsPayHistory" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods_pay_history (spu_no, payment_method, spu_amount, 
      `number`, the_total_amount_of_orders, pay_json, 
      gmt_create, gmt_update, remark
      )
    values (#{spuNo,jdbcType=BIGINT}, #{paymentMethod,jdbcType=INTEGER}, #{spuAmount,jdbcType=DECIMAL}, 
      #{number,jdbcType=BIGINT}, #{theTotalAmountOfOrders,jdbcType=DECIMAL}, #{payJson,jdbcType=LONGVARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cdzg.xzshop.domain.GoodsPayHistory" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods_pay_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="spuNo != null">
        spu_no,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="spuAmount != null">
        spu_amount,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="theTotalAmountOfOrders != null">
        the_total_amount_of_orders,
      </if>
      <if test="payJson != null">
        pay_json,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="spuNo != null">
        #{spuNo,jdbcType=BIGINT},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="spuAmount != null">
        #{spuAmount,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=BIGINT},
      </if>
      <if test="theTotalAmountOfOrders != null">
        #{theTotalAmountOfOrders,jdbcType=DECIMAL},
      </if>
      <if test="payJson != null">
        #{payJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdzg.xzshop.domain.GoodsPayHistory">
    <!--@mbg.generated-->
    update goods_pay_history
    <set>
      <if test="spuNo != null">
        spu_no = #{spuNo,jdbcType=BIGINT},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="spuAmount != null">
        spu_amount = #{spuAmount,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=BIGINT},
      </if>
      <if test="theTotalAmountOfOrders != null">
        the_total_amount_of_orders = #{theTotalAmountOfOrders,jdbcType=DECIMAL},
      </if>
      <if test="payJson != null">
        pay_json = #{payJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdzg.xzshop.domain.GoodsPayHistory">
    <!--@mbg.generated-->
    update goods_pay_history
    set spu_no = #{spuNo,jdbcType=BIGINT},
      payment_method = #{paymentMethod,jdbcType=INTEGER},
      spu_amount = #{spuAmount,jdbcType=DECIMAL},
      `number` = #{number,jdbcType=BIGINT},
      the_total_amount_of_orders = #{theTotalAmountOfOrders,jdbcType=DECIMAL},
      pay_json = #{payJson,jdbcType=LONGVARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update goods_pay_history
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="spu_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.spuNo,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="payment_method = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.paymentMethod,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="spu_amount = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.spuAmount,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="`number` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.number,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="the_total_amount_of_orders = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.theTotalAmountOfOrders,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="pay_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.payJson,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="gmt_create = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.gmtCreate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="gmt_update = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.gmtUpdate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update goods_pay_history
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="spu_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.spuNo != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.spuNo,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="payment_method = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.paymentMethod != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.paymentMethod,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="spu_amount = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.spuAmount != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.spuAmount,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="`number` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.number != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.number,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="the_total_amount_of_orders = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.theTotalAmountOfOrders != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.theTotalAmountOfOrders,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="pay_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.payJson != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.payJson,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="gmt_create = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.gmtCreate != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.gmtCreate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="gmt_update = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.gmtUpdate != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.gmtUpdate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.remark != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods_pay_history
    (spu_no, payment_method, spu_amount, `number`, the_total_amount_of_orders, pay_json, 
      gmt_create, gmt_update, remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.spuNo,jdbcType=BIGINT}, #{item.paymentMethod,jdbcType=INTEGER}, #{item.spuAmount,jdbcType=DECIMAL}, 
        #{item.number,jdbcType=BIGINT}, #{item.theTotalAmountOfOrders,jdbcType=DECIMAL}, 
        #{item.payJson,jdbcType=LONGVARCHAR}, #{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.gmtUpdate,jdbcType=TIMESTAMP}, 
        #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.cdzg.xzshop.domain.GoodsPayHistory" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods_pay_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      spu_no,
      payment_method,
      spu_amount,
      `number`,
      the_total_amount_of_orders,
      pay_json,
      gmt_create,
      gmt_update,
      remark,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{spuNo,jdbcType=BIGINT},
      #{paymentMethod,jdbcType=INTEGER},
      #{spuAmount,jdbcType=DECIMAL},
      #{number,jdbcType=BIGINT},
      #{theTotalAmountOfOrders,jdbcType=DECIMAL},
      #{payJson,jdbcType=LONGVARCHAR},
      #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtUpdate,jdbcType=TIMESTAMP},
      #{remark,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      spu_no = #{spuNo,jdbcType=BIGINT},
      payment_method = #{paymentMethod,jdbcType=INTEGER},
      spu_amount = #{spuAmount,jdbcType=DECIMAL},
      `number` = #{number,jdbcType=BIGINT},
      the_total_amount_of_orders = #{theTotalAmountOfOrders,jdbcType=DECIMAL},
      pay_json = #{payJson,jdbcType=LONGVARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.cdzg.xzshop.domain.GoodsPayHistory" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods_pay_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="spuNo != null">
        spu_no,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="spuAmount != null">
        spu_amount,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="theTotalAmountOfOrders != null">
        the_total_amount_of_orders,
      </if>
      <if test="payJson != null">
        pay_json,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="spuNo != null">
        #{spuNo,jdbcType=BIGINT},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="spuAmount != null">
        #{spuAmount,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=BIGINT},
      </if>
      <if test="theTotalAmountOfOrders != null">
        #{theTotalAmountOfOrders,jdbcType=DECIMAL},
      </if>
      <if test="payJson != null">
        #{payJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="spuNo != null">
        spu_no = #{spuNo,jdbcType=BIGINT},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=INTEGER},
      </if>
      <if test="spuAmount != null">
        spu_amount = #{spuAmount,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=BIGINT},
      </if>
      <if test="theTotalAmountOfOrders != null">
        the_total_amount_of_orders = #{theTotalAmountOfOrders,jdbcType=DECIMAL},
      </if>
      <if test="payJson != null">
        pay_json = #{payJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>